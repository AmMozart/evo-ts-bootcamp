{"version":3,"sources":["components/ControlPanel.tsx","components/Status.tsx","components/SortField.tsx","utils/bubbleSort.ts","Bolle.svg","components/App.tsx","index.tsx","config.ts","components/SortField.module.css","components/App.module.css"],"names":["ControlPanel","isSolved","inProcess","update","start","btnName","onClick","disabled","Status","text","SortField","array","className","style","sortedField","map","n","i","bubble","height","bubbleSort","arr","length","j","left","right","App","props","timer","createRandomArray","size","Array","fill","Math","random","event","clearInterval","setState","arraySize","state","iterator","setInterval","newArray","next","value","speed","this","app","icon","src","alt","React","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"mOAuBeA,MAdf,YAAmF,IAA3DC,EAA0D,EAA1DA,SAAUC,EAAgD,EAAhDA,UAAWC,EAAqC,EAArCA,OAAQC,EAA6B,EAA7BA,MAC/CC,EAAkBH,EAAY,OAAS,QAE3C,OAAO,qCACL,wBAAQI,QAASH,EAAjB,qBAIA,wBAAQI,SAAUN,EAAUK,QAASF,EAArC,SACGC,QCNQG,MANf,YAA+C,IAA7BC,EAA4B,EAA5BA,KAChB,OAAO,mCACL,4BAAIA,O,gBCaOC,MAdf,YAAmD,IAA9BC,EAA6B,EAA7BA,MACnB,OACE,qBAAKC,UAAWC,IAAMC,YAAtB,SACGH,EAAMI,KAAI,SAACC,EAAGC,GAAJ,OACT,qBAEEL,UAAWC,IAAMK,OACjBL,MAAO,CAAEM,OAAO,GAAD,OAAKH,EAAL,QAFVC,S,2BCZLG,GAAV,SAAUA,EAAWC,GAArB,6EAEWJ,EAAI,EAFf,YAEkBA,EAAII,EAAIC,OAAS,GAFnC,iBAGaC,EAAI,EAHjB,YAGoBA,EAAIF,EAAIC,OAASL,EAAI,GAHzC,oBAKUO,EAAeH,EAAIE,GACnBE,EAAgBJ,EAAIE,EAAI,KAExBC,EAAOC,GARjB,iBAWQ,OAFAJ,EAAIE,GAAKE,EACTJ,EAAIE,EAAI,GAAKC,EAVrB,UAWcH,EAXd,QAG4CE,IAH5C,uBAEsCN,IAFtC,uDAiBeG,Q,gBCjBA,MAA0B,kCCyF1BM,E,kDAjEb,WAAYC,GAAe,IAAD,8BACxB,cAAMA,IAHRC,WAE0B,IAS1BC,kBAAuC,SAAAC,GAAI,OACzCC,MAAMD,GACHE,KAAK,GACLjB,KAAI,oBAAyB,IAAhBkB,KAAKC,cAZG,EAc1B/B,OAAqD,SAAAgC,GACnDC,cAAc,EAAKR,OACnB,EAAKS,SAAS,CACZ1B,MAAO,EAAKkB,kBAAkB,EAAKF,MAAMW,WACzCrC,UAAU,EACVC,WAAW,KAnBW,EAuB1BE,MAAoD,SAAA+B,GAAU,IAAD,EAC9B,EAAKI,MAA1B5B,EADmD,EACnDA,MAAOT,EAD4C,EAC5CA,UACTsC,EAAWpB,EAAWT,GAExBT,EACFkC,cAAc,EAAKR,OAGnB,EAAKA,MAAQa,aAAY,WAEvB,IAAMC,EAAWF,EAASG,OAAOC,MAE7BF,EACF,EAAKL,SAAS,CAAE1B,MAAO+B,KAEvBN,cAAc,EAAKR,OACnB,EAAKS,SAAS,CAAEnC,WAAW,EAAOD,UAAU,OAG7C,EAAK0B,MAAMkB,OAEhB,EAAKR,SAAS,CAAEnC,WAAYA,KA1C5B,EAAKqC,MAAQ,CACX5B,MAAO,EAAKkB,kBAAkBF,EAAMW,WACpCrC,UAAU,EACVC,WAAW,GALW,E,0CA+C1B,WAAU,IAAD,EACgC4C,KAAKP,MAApC5B,EADD,EACCA,MAAOV,EADR,EACQA,SAAUC,EADlB,EACkBA,UACzB,OACE,uBAAMU,UAAWC,IAAMkC,IAAvB,UACE,6CACA,qBAAKnC,UAAWC,IAAMmC,KAAMC,IAAKD,EAAME,IAAI,WAC3C,cAAC,EAAD,CAAWvC,MAAOA,IAClB,cAAC,EAAD,CACET,UAAWA,EACXE,MAAO0C,KAAK1C,MACZD,OAAQ2C,KAAK3C,OACbF,SAAUA,IACZ,cAAC,EAAD,CAAQQ,KAAMR,EAAW,SAAW,sB,GA9D1BkD,IAAMC,WCfxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,CAAKjB,UCRiB,GDQMO,MCPX,ODSnBW,SAASC,eAAe,U,kBET1BC,EAAOC,QAAU,CAAC,OAAS,0BAA0B,YAAc,iC,kBCAnED,EAAOC,QAAU,CAAC,IAAM,iBAAiB,KAAO,qB","file":"static/js/main.a4136f4d.chunk.js","sourcesContent":["import React from 'react'\n\ntype Props = {\n  isSolved: boolean\n  inProcess: boolean,\n  update: React.MouseEventHandler<HTMLButtonElement>,\n  start: React.MouseEventHandler<HTMLButtonElement>,\n}\n\nfunction ControlPanel({ isSolved, inProcess, update, start }: Props): JSX.Element {\n  let btnName: string = inProcess ? 'Stop' : 'Start'\n\n  return <>\n    <button onClick={update}>\n      New Set\n    </button>\n\n    <button disabled={isSolved} onClick={start}>\n      {btnName}\n    </button>\n  </>\n}\n\nexport default ControlPanel","import React from 'react'\n\ntype Props = {\n  text: string\n}\n\nfunction Status({ text }: Props): JSX.Element {\n  return <>\n    <p>{text}</p>\n  </>\n}\n\nexport default Status","import React from 'react'\nimport style from './SortField.module.css'\n\ntype Props = {\n  array: number[]\n}\n\nfunction SortField({ array }: Props): JSX.Element {\n  return (\n    <div className={style.sortedField}>\n      {array.map((n, i) =>\n        <div\n          key={i}\n          className={style.bubble}\n          style={{ height: `${n}px` }}>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default SortField","function* bubbleSort(arr: number[]): Generator<number[]> {\n\n  for (let i = 0; i < arr.length - 1; i++) {\n    for (let j = 0; j < arr.length - i - 1; j++) {\n\n      let left: number = arr[j]\n      let right: number = arr[j + 1]\n\n      if (left > right) {\n        arr[j] = right\n        arr[j + 1] = left\n        yield arr\n      }\n    }\n  }\n}\n\nexport default bubbleSort","export default __webpack_public_path__ + \"static/media/Bolle.093c197c.svg\";","import React from 'react'\nimport ControlPanel from './ControlPanel'\nimport Status from './Status'\nimport SortField from './SortField'\nimport bubbleSort from '../utils/bubbleSort'\nimport style from './App.module.css'\nimport icon from '../Bolle.svg'\n\ninterface Props {\n  arraySize: number,\n  speed: number\n}\n\ninterface State {\n  array: number[],\n  isSolved: boolean,\n  inProcess: boolean\n}\n\ntype CreateRandomArray = (size: number) => number[]\n\nclass App extends React.Component<Props, State> {\n  timer: any\n\n  constructor(props: Props) {\n    super(props)\n    this.state = {\n      array: this.createRandomArray(props.arraySize),\n      isSolved: false,\n      inProcess: false\n    }\n  }\n\n  createRandomArray: CreateRandomArray = size =>\n    Array(size)\n      .fill(0)\n      .map(() => ~~(Math.random() * 200))\n\n  update: React.MouseEventHandler<HTMLButtonElement> = event => {\n    clearInterval(this.timer)\n    this.setState({\n      array: this.createRandomArray(this.props.arraySize),\n      isSolved: false,\n      inProcess: false\n    })\n  }\n\n  start: React.MouseEventHandler<HTMLButtonElement> = event => {\n    const { array, inProcess } = this.state\n    const iterator = bubbleSort(array)\n\n    if (inProcess) {\n      clearInterval(this.timer)\n    }\n    else {\n      this.timer = setInterval(() => {\n\n        const newArray = iterator.next().value\n\n        if (newArray) {\n          this.setState({ array: newArray })\n        } else {\n          clearInterval(this.timer)\n          this.setState({ inProcess: false, isSolved: true })\n        }\n\n      }, this.props.speed)\n    }\n    this.setState({ inProcess: !inProcess })\n  }\n\n  render() {\n    const { array, isSolved, inProcess } = this.state\n    return (\n      <main className={style.app}>\n        <h1>Bubble Sort</h1>\n        <img className={style.icon} src={icon} alt=\"bubble\" />\n        <SortField array={array} />\n        <ControlPanel\n          inProcess={inProcess}\n          start={this.start}\n          update={this.update}\n          isSolved={isSolved} />\n        <Status text={isSolved ? 'Solved' : 'Not Solved'} />\n      </main>\n    )\n  }\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './components/App'\nimport { ARRAY_SIZE, SPEED } from './config'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App arraySize={ARRAY_SIZE} speed={SPEED} />\n  </React.StrictMode>,\n  document.getElementById('root')\n)","export const ARRAY_SIZE = 30\nexport const SPEED = 75 // ms","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bubble\":\"SortField_bubble__3Ae5X\",\"sortedField\":\"SortField_sortedField__1JsOs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1tA9O\",\"icon\":\"App_icon__1973C\"};"],"sourceRoot":""}