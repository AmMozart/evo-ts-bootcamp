{"version":3,"sources":["App.module.css","features/photo/Like.module.css","features/photo/Photo.module.css","features/favorives/Favorites.module.css","features/mars/Mars.module.css","app/hooks.ts","features/favorives/favoritesSlice.ts","features/photo/Like.tsx","features/photo/Photo.tsx","features/mars/nasaAPI.ts","features/mars/marsSlice.ts","features/favorives/Favorites.tsx","features/mars/Mars.tsx","App.tsx","app/store.ts","index.tsx"],"names":["module","exports","nav","link","favorite","photo","photoField","useAppDispatch","useDispatch","useAppSelector","useSelector","favoritesSlice","createSlice","name","initialState","photoIds","reducers","addToFavorites","state","action","find","x","payload","push","removeFromFavorites","index","indexOf","splice","actions","selectFavoritesPhotos","fovorites","Like","_ref","id","favorites","dispatch","svgOpacity","react","className","styles","onClick","viewBox","opacity","xmlns","d","fill","Photo","img_src","camera","rover","imgTitle","concat","full_name","Like_Like","alt","src","fetchMarsData","sol","url","fetch","then","res","json","data","photos","loadDataFromNasa","createAsyncThunk","_ref2","Object","asyncToGenerator","regenerator_default","a","mark","_callee","selectedSol","wrap","_context","prev","next","sent","AddPhotos","stop","_x","_x2","apply","this","arguments","marsSlice","status","sols","changeSelectedSol","_state$photos","toConsumableArray","extraReducers","builder","addCase","pending","fulfilled","rejected","selectSelectedSol","mars","selectPhotos","selectStatus","Favorites","length","map","element","Photo_Photo","assign","key","Mars","textStatus","loadingStatus","type","value","min","onChange","event","target","filter","App","react_default","createElement","react_router_dom","to","react_router","path","exact","Mars_Mars","Favorites_Favorites","store","configureStore","reducer","marsReducer","favoritesReducer","ReactDOM","render","StrictMode","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.87569211.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"App_nav__2q5-9\",\"link\":\"App_link__sWT-K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"favorite\":\"Like_favorite__1PXD-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"photo\":\"Photo_photo__TX5Ol\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"photoField\":\"Favorites_photoField__2ozyi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"photoField\":\"Mars_photoField__3eDtw\"};","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\nimport type { RootState, AppDispatch } from './store'\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector\n","import { RootState } from '../../app/store'\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\n\ninterface InitialState {\n  photoIds: number[]\n}\n\nexport const initialState: InitialState = {\n  photoIds: []\n}\n\nconst favoritesSlice = createSlice({\n  name: 'favorites',\n  initialState,\n  reducers: {\n\n    addToFavorites: (state, action: PayloadAction<number>) => {\n      if (!state.photoIds.find(x => x === action.payload))\n        state.photoIds.push(action.payload)\n    },\n\n    removeFromFavorites: (state, action: PayloadAction<number>) => {\n      let index = state.photoIds.indexOf(action.payload)\n\n      if (index !== -1)\n        state.photoIds.splice(index, 1)\n    }\n  }\n})\n\n\nexport const { addToFavorites, removeFromFavorites } = favoritesSlice.actions\n\nexport const selectFavoritesPhotos = (state: RootState): number[] => state.fovorites.photoIds\n\nexport default favoritesSlice.reducer\n","import * as React from 'react'\nimport { useAppDispatch, useAppSelector } from '../../app/hooks'\nimport { addToFavorites, removeFromFavorites, selectFavoritesPhotos } from '../favorives/favoritesSlice'\nimport styles from './Like.module.css'\n\ninterface PropsLike {\n  id: number\n}\n\nconst COLOR = \"#E30A17\"\n\nexport const Like: React.FC<PropsLike> = ({ id }) => {\n\n  const favorites = useAppSelector(selectFavoritesPhotos)\n  const dispatch = useAppDispatch()\n\n  const svgOpacity = favorites.indexOf(id) >= 0 ? \"1\" : \"0.6\"\n\n  const handleClick: React.MouseEventHandler<SVGSVGElement> = () => {\n    if (favorites.indexOf(id) >= 0)\n      dispatch(removeFromFavorites(id))\n    else\n      dispatch(addToFavorites(id))\n  }\n\n  return (\n    <>\n      <svg className={styles.favorite} onClick={handleClick} viewBox=\"0 0 98 89\" opacity={svgOpacity} xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M89.834 48.974L48.81 8.95 7.786 48.974 48.81 89l41.023-40.026z\" fill={COLOR}></path>\n        <path d=\"M59.467 29.381c0 16.022-13.312 29.01-29.733 29.01C13.311 58.391 0 45.403 0 29.381 0 13.36 13.312.371 29.733.371c16.422 0 29.734 12.989 29.734 29.01z\" fill={COLOR}></path>\n        <path d=\"M98 29.01c0 16.022-13.312 29.01-29.734 29.01-16.42 0-29.733-12.988-29.733-29.01C38.533 12.988 51.845 0 68.266 0 84.688 0 98 12.988 98 29.01z\" fill={COLOR}></path>\n      </svg>\n    </>\n  )\n}\n","import * as React from 'react'\nimport { Photos } from '../mars/nasaAPI'\nimport { Like } from './Like'\nimport styles from './Photo.module.css'\n\nexport const Photo: React.FC<Photos> = ({ img_src, camera, rover, id }) => {\n\n  const imgTitle = `Rover: ${rover.name}, Camera: ${camera.full_name}`\n\n  return (\n    <div className={styles.photo}>\n      <Like id={id} />\n      <img alt={imgTitle} src={img_src} />\n      <span>{imgTitle}</span>\n    </div>\n  )\n}\n","const API_KEY = '3kiSvCkEh0zo15za1FxhzexghZyqPVITX44brEo8'\n\nexport interface Camera {\n  id: number,\n  roverID: number,\n  name: string,\n  full_name: string\n}\nexport interface Rover {\n  id: number,\n  name: string,\n  landingData: Date,\n  launchDate: Date,\n  status: string\n}\n\nexport interface Photos {\n  id: number,\n  sol: number,\n  camera: Camera,\n  img_src: string,\n  earthDate: Date,\n  rover: Rover\n}\n\nexport const fetchMarsData = (sol: number): Promise<any> => {\n  const url = `https://api.nasa.gov/mars-photos/api/v1/rovers/perseverance/photos?sol=${sol}&api_key=${API_KEY}`\n  return fetch(url)\n    .then(res => res.json())\n    .then((data) => data.photos)\n}\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { RootState } from '../../app/store'\nimport { fetchMarsData, Photos } from './nasaAPI'\n\ninterface MarsState {\n  status: 'idle' | 'loading' | 'failed',\n  selectedSol: number,\n  sols: number[][],\n  photos: Photos[]\n}\n\nconst initialState: MarsState = {\n  status: 'idle',\n  selectedSol: 0,\n  sols: [],\n  photos: []\n}\n\nexport const loadDataFromNasa = createAsyncThunk(\n  'mars/loadDataFromNasa',\n  async (selectedSol: number, { dispatch }) => {\n    const photos = await fetchMarsData(selectedSol)\n    dispatch(AddPhotos(photos))\n  }\n);\n\nconst marsSlice = createSlice({\n  name: 'mars',\n  initialState,\n  reducers: {\n    changeSelectedSol: (state, action: PayloadAction<number>) => {\n      state.selectedSol = action.payload\n    },\n    AddPhotos: (state, action: PayloadAction<Photos[]>) => {\n      state.photos.push(...action.payload)\n    }\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(loadDataFromNasa.pending, (state) => {\n        state.status = 'loading'\n      })\n      .addCase(loadDataFromNasa.fulfilled, (state) => {\n        state.status = 'idle'\n      })\n      .addCase(loadDataFromNasa.rejected, (state) => {\n        state.status = 'failed'\n      })\n  },\n})\n\nexport const { changeSelectedSol, AddPhotos } = marsSlice.actions\n\nexport const selectSelectedSol = (state: RootState): number => state.mars.selectedSol\nexport const selectSols = (state: RootState): number[][] => state.mars.sols\nexport const selectPhotos = (state: RootState): Photos[] => state.mars.photos\nexport const selectStatus = (state: RootState): MarsState['status'] => state.mars.status\n\nexport default marsSlice.reducer\n","import * as React from 'react'\nimport { Photo } from '../photo/Photo'\nimport { useAppSelector } from '../../app/hooks'\nimport { selectFavoritesPhotos } from './favoritesSlice'\nimport { selectPhotos} from '../mars/marsSlice'\nimport styles from './Favorites.module.css'\n\nexport const Favorites: React.FC = () => {\n  const favorites = useAppSelector(selectFavoritesPhotos)\n  const photos = useAppSelector(selectPhotos)\n\n  const status = favorites.length ? null : <p>No favorites photos, add some!</p>\n\n  return (\n    <>\n      {status}\n      <div className={styles.photoField}>\n        {favorites.map(id => {\n          const element = photos\n            .find(x => id === x.id);\n\n          if (element)\n            return <Photo key={element.id} {...element} />\n          else\n            return null\n        })}\n      </div>\n    </>\n  )\n}\n","import * as React from 'react'\nimport { useAppDispatch, useAppSelector } from '../../app/hooks'\nimport { selectSelectedSol, changeSelectedSol, loadDataFromNasa, selectStatus, selectPhotos } from './marsSlice'\nimport { Photo } from '../photo/Photo'\nimport styles from './Mars.module.css'\n\nexport const Mars: React.FC = () => {\n\n  const selectedSol = useAppSelector(selectSelectedSol)\n  const photos = useAppSelector(selectPhotos)\n  const loadingStatus = useAppSelector(selectStatus)\n\n  const dispatch = useAppDispatch()\n\n  let textStatus: string\n\n  switch (loadingStatus) {\n    case 'idle':\n      textStatus = 'Photos are not loaded'\n      break\n    case 'loading':\n      textStatus = 'Loading...'\n      break\n    default:\n      textStatus = 'Failed loaded try again'\n  }\n\n  const changeSolNumber = (event: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(changeSelectedSol(+event.target.value))\n  }\n\n  const loadData: React.MouseEventHandler<HTMLButtonElement> = () => {\n    dispatch(loadDataFromNasa(selectedSol))\n  }\n\n  return (\n    <>\n      <p>Select Sol and press \"load\"!</p>\n      <input type=\"number\" value={selectedSol} min=\"0\" onChange={changeSolNumber} />\n      <button onClick={loadData}>Load</button>\n\n      <div className={styles.photoField}>\n        {photos.filter(photo => photo.sol === selectedSol).map(photo => <Photo key={photo.id} {...photo} />)}\n      </div>\n\n      {photos.find(x => x.sol === selectedSol) ? null : <p>{textStatus}</p>}\n    </>\n  )\n}\n","import React from 'react'\nimport { BrowserRouter, Route, Switch, Link } from 'react-router-dom'\nimport { Favorites } from './features/favorives/Favorites'\nimport { Mars } from './features/mars/Mars'\nimport styles from './App.module.css';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <nav className={styles.nav}>\n        <ul>\n          <li><Link className={styles.link} to=\"/\">Photos</Link></li>\n          <li><Link className={styles.link} to=\"/Favorites\">Favorites</Link></li>\n        </ul>\n      </nav>\n\n      <Switch>\n        <Route path=\"/\" exact>\n          <Mars />\n        </Route>\n\n        <Route path=\"/Favorites\">\n          <Favorites />\n        </Route>\n      </Switch>\n\n    </BrowserRouter>\n  )\n}\n\nexport default App\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit'\nimport marsReducer from '../features/mars/marsSlice'\nimport favoritesReducer from '../features/favorives/favoritesSlice'\n\nexport const store = configureStore({\n  reducer: {\n    mars: marsReducer,\n    fovorites: favoritesReducer\n  },\n});\n\nexport type AppDispatch = typeof store.dispatch\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport { store } from './app/store'\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}